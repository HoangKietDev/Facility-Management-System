{
    "openapi": "3.0.0",
    "info": {
      "title": "Manage Facilities API",
      "description": "API for managing users, facilities, and categories.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:5152"
      }
    ],
    "tags": [
      {
        "name": "user",
        "description": "Operations about users"
      },
      {
        "name": "facility",
        "description": "Operations about facilities"
      },
      {
        "name": "category",
        "description": "Operations about categories"
      }
    ],
    "paths": {
      "/users": {
        "get": {
          "tags": ["user"],
          "summary": "Get list of users",
          "description": "Retrieve all users",
          "responses": {
            "200": {
              "description": "List of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["user"],
          "summary": "Create a new user",
          "description": "Add a new user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["user"],
          "summary": "Get user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of user to retrieve",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["user"],
          "summary": "Update a user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of user to update",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated"
            }
          }
        },
        "delete": {
          "tags": ["user"],
          "summary": "Delete a user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of user to delete",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted"
            }
          }
        }
      },
      "/facilities": {
        "get": {
          "tags": ["facility"],
          "summary": "Get list of facilities",
          "responses": {
            "200": {
              "description": "List of facilities",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Facility"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["facility"],
          "summary": "Create a new facility",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facility"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Facility created"
            }
          }
        }
      },
      "/facilities/{id}": {
        "get": {
          "tags": ["facility"],
          "summary": "Get facility by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of facility to retrieve",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Facility details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Facility"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["facility"],
          "summary": "Update a facility",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of facility to update",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facility"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Facility updated"
            }
          }
        },
        "delete": {
          "tags": ["facility"],
          "summary": "Delete a facility",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of facility to delete",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Facility deleted"
            }
          }
        }
      },
      "/categories": {
        "get": {
          "tags": ["category"],
          "summary": "Get list of categories",
          "responses": {
            "200": {
              "description": "List of categories",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["category"],
          "summary": "Create a new category",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Category created"
            }
          }
        }
      },
      "/categories/{id}": {
        "get": {
          "tags": ["category"],
          "summary": "Get category by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of category to retrieve",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Category details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["category"],
          "summary": "Update a category",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of category to update",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Category updated"
            }
          }
        },
        "delete": {
          "tags": ["category"],
          "summary": "Delete a category",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of category to delete",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Category deleted"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "avatar": {
                "type": "string"
            },
            "status": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string"
            }
          },
          "required": ["name", "email"]
        },
        "Facility": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "status": {
              "type": "integer",
              "format": "int32"
            },
            "location": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["name", "category"]
        },
        "Category": {
          "type": "object",
          "properties": {
            "categoryName": {
              "type": "string"
            }
          },
          "required": ["categoryName"]
        }
      }
    }
  }
  
  